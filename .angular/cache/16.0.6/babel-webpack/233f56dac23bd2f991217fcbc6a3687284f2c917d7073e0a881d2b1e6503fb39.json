{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nclass LoginPageComponent {\n  constructor(formbuilder, http, router) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formbuilder.group({\n      email: [''],\n      password: ['', Validators.required]\n    });\n  }\n  /*  login(){\n     this.http.get<any>(\"http://localhost:3000/signupUsersList\")\n     .subscribe(res=>{\n       const user = res.find((a:any)=>{\n         return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password\n       });\n       if(user){\n         alert('Login Succesful');\n         this.loginForm.reset()\n       this.router.navigate([\"home\"])\n       }else{\n         alert(\"user not found\")\n       }\n     },err=>{\n       alert(\"Something went wrong\")\n     })\n   }\n  */\n  login() {\n    console.log(this.loginForm.value);\n    this.http.get(\"http://localhost:3000/signupUsersList\").subscribe({\n      next: res => {\n        const user = res.find(a => {\n          return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\n        });\n        if (user) {\n          alert('Login Successful');\n          this.loginForm.reset();\n          this.router.navigate([\"products\"]);\n        } else {\n          alert(\"User not found\");\n        }\n      },\n      error: err => {\n        alert(\"Something went wrong\");\n      }\n    });\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login-page\"]],\n  decls: 27,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"form-box\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter Password\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"routerLink\", \"/signUp\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"Full Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\");\n      i0.ɵɵtext(14, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\");\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"span\");\n      i0.ɵɵtext(21, \"Create New Account \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"a\", 5);\n      i0.ɵɵtext(23, \"SignUp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵelementStart(25, \"button\", 6);\n      i0.ɵɵtext(26, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginPageComponent };","map":{"version":3,"names":["Validators","LoginPageComponent","constructor","formbuilder","http","router","ngOnInit","loginForm","group","email","password","required","login","console","log","value","get","subscribe","next","res","user","find","a","alert","reset","navigate","error","err","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\login-page\\login-page.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\login-page\\login-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit{\r\n  public loginForm!: FormGroup\r\n\r\n  constructor(private formbuilder: FormBuilder,private http: HttpClient, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formbuilder.group({\r\n      email: [''],\r\n      password: ['', Validators.required]\r\n    })\r\n  }\r\n  \r\n /*  login(){\r\n    this.http.get<any>(\"http://localhost:3000/signupUsersList\")\r\n    .subscribe(res=>{\r\n      const user = res.find((a:any)=>{\r\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password \r\n      });\r\n      if(user){\r\n        alert('Login Succesful');\r\n        this.loginForm.reset()\r\n      this.router.navigate([\"home\"])\r\n      }else{\r\n        alert(\"user not found\")\r\n      }\r\n    },err=>{\r\n      alert(\"Something went wrong\")\r\n    })\r\n  }\r\n */\r\n  login() {\r\n    console.log(this.loginForm.value)\r\n    this.http.get<any>(\"http://localhost:3000/signupUsersList\")\r\n      .subscribe({\r\n        next: (res) => {\r\n          const user = res.find((a: any) => {\r\n            return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\r\n          });\r\n          if (user) {\r\n            alert('Login Successful');\r\n            this.loginForm.reset();\r\n            this.router.navigate([\"products\"]);\r\n          } else {\r\n            alert(\"User not found\");\r\n          }\r\n        },\r\n        error: (err) => {\r\n          alert(\"Something went wrong\");\r\n        }\r\n      });\r\n  }\r\n  \r\n}\r\n","\r\n<!-- <div>\r\n    <h1>Hi Welcome Back</h1>\r\n     <h3>Login Here</h3>\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n        <div>\r\n          <label for=\"email\">Email</label>\r\n          <input  formControlName=\"email\" required type=\"text\">\r\n          <label for=\"password\">Password</label>\r\n          <input formControlName=\"email\" type=\"password\" required>\r\n        </div>\r\n        <button>Submit</button>\r\n        <span>Don't have an account? \r\n        <a routerLink=\"/signUp\">signUp</a></span>\r\n      </form>\r\n  </div>\r\n -->\r\n  <div class=\"container\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"form-box\">\r\n        <h3>Login</h3>\r\n        <div class=\"form-group\">\r\n          <label>Full Name</label>\r\n          <input type=\"text\" formControlName=\"email\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Email\"/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Phone Number</label>\r\n          <input type=\"text\" formControlName=\"email\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Email\"/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Email\"/>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Password\"/>\r\n        </div>\r\n\r\n        <span>Create New Account </span>\r\n        <a routerLink=\"/signUp\">SignUp</a>\r\n        <br/>\r\n        <button type=\"submit\" class=\"btn btn-success\">Login</button>\r\n    </form>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}