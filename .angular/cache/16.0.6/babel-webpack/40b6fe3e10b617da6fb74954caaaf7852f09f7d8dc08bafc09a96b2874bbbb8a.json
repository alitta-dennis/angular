{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./signup-page.service\";\nclass SignupPageComponent {\n  constructor(formBuilder, http, router, signupService) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.signupService = signupService;\n  }\n  ngOnInit() {\n    this.signUpForm = this.formBuilder.group({\n      email: [\"\"],\n      password: [\"\"]\n    });\n  }\n  signupUser(user) {\n    this.signupService.signup(user).subscribe(response => {\n      console.log('Signup successful:', response);\n      // You can perform further actions, such as navigating to a login page.\n    }, error => {\n      console.error('Error during signup:', error);\n      // Handle the error here.\n    });\n  }\n}\n_class = SignupPageComponent;\n_class.ɵfac = function SignupPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.SignupPageService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-signup-page\"]],\n  decls: 9,\n  vars: 0,\n  consts: [[3, \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"ngModel\", \"\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function SignupPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupPageComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.signupUser(ctx.signUpForm.value);\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵtext(8, \"Sign Up\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { SignupPageComponent };","map":{"version":3,"names":["SignupPageComponent","constructor","formBuilder","http","router","signupService","ngOnInit","signUpForm","group","email","password","signupUser","user","signup","subscribe","response","console","log","error","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","i4","SignupPageService","selectors","decls","vars","consts","template","SignupPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SignupPageComponent_Template_form_ngSubmit_0_listener","value","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular-ReactiveForms\\apm-v12\\src\\app\\signup-page\\signup-page.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular-ReactiveForms\\apm-v12\\src\\app\\signup-page\\signup-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, EmailValidator } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { SignupPageService } from './signup-page.service';\n\n@Component({\n  selector: 'app-signup-page',\n  templateUrl: './signup-page.component.html',\n  styleUrls: ['./signup-page.component.css']\n})\nexport class SignupPageComponent {\n  public signUpForm !: FormGroup\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private router: Router, private signupService: SignupPageService) { }\n\n  ngOnInit(): void {\n    this.signUpForm = this.formBuilder.group({\n      email: [\"\"],\n      password: [\"\"]\n    })\n  }\n\n  signupUser(user: any) {\n    this.signupService.signup(user).subscribe(\n      (response: any) => {\n        console.log('Signup successful:', response);\n        // You can perform further actions, such as navigating to a login page.\n      },\n      (error: any) => {\n        console.error('Error during signup:', error);\n        // Handle the error here.\n      }\n    );\n  }\n\n  /* signUp(){\n    this.http.post<any>(\"http://localhost:3000/signupUsersList\",this.signUpForm.value)\n    .subscribe(res=>{\n      alert('SIGNIN SUCCESFUL');\n      this.signUpForm.reset()\n      this.router.navigate([\"login\"])\n    },err=>{\n      alert(\"Something went wrong\")\n    })\n  } */\n\n}\n","\n<!-- <div>\n    <h1>Hello Welcome </h1>\n      <h3>Create An Account</h3>\n       <form [formGroup]=\"signUpForm\" (ngSubmit)=\"signUp()\">\n         <div>\n           <label for=\"email\">Email</label>\n           <input  formControlName=\"email\" required  type=\"email\">\n           <label for=\"password\">Password</label>\n           <input formControlName=\"password\" type=\"password\">\n         </div>\n         <button>Submit</button>\n         <span>Already have an account? \n         <a routerLink=\"/login\">signUp</a></span>\n       </form>\n   </div> -->\n\n<!--    <div class=\"container\">\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"signUp()\" class=\"form-box1\">\n        <h3>SignUp </h3>\n\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Email\"/>\n        </div>\n\n\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Password\"/>\n        </div>\n        <span>Already have an account? Login here:</span>\n        <a routerLink=\"['/login']\">Sign In</a>\n        <br/>\n        <button type=\"submit\" class=\"btn btn-success\">Signup</button>\n    </form>\n</div>\n<router-outlet></router-outlet> -->\n\n<!-- signup.component.html -->\n<form (ngSubmit)=\"signupUser(signUpForm.value)\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\" ngModel required>\n\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\" ngModel required>\n\n  <button type=\"submit\">Sign Up</button>\n</form>\n"],"mappings":";;;;;;AAMA,MAKaA,mBAAmB;EAE9BC,YAAoBC,WAAwB,EAAUC,IAAgB,EAAUC,MAAc,EAAUC,aAAgC;IAApH,KAAAH,WAAW,GAAXA,WAAW;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,aAAa,GAAbA,aAAa;EAAuB;EAE5IC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACvCC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACJ;EAEAC,UAAUA,CAACC,IAAS;IAClB,IAAI,CAACP,aAAa,CAACQ,MAAM,CAACD,IAAI,CAAC,CAACE,SAAS,CACtCC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC3C;IACF,CAAC,EACAG,KAAU,IAAI;MACbF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC,CACF;EACH;;SAtBWlB,mBAAmB;;mBAAnBA,MAAmB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,iBAAA;AAAA;;QAAnB5B,MAAmB;EAAA6B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MC6BhChB,EAAA,CAAAkB,cAAA,cAAgD;MAA1ClB,EAAA,CAAAmB,UAAA,sBAAAC,sDAAA;QAAA,OAAYH,GAAA,CAAAzB,UAAA,CAAAyB,GAAA,CAAA7B,UAAA,CAAAiC,KAAA,CAA4B;MAAA,EAAC;MAC7CrB,EAAA,CAAAkB,cAAA,eAAsB;MAAAlB,EAAA,CAAAsB,MAAA,gBAAS;MAAAtB,EAAA,CAAAuB,YAAA,EAAQ;MACvCvB,EAAA,CAAAwB,SAAA,eAAkE;MAElExB,EAAA,CAAAkB,cAAA,eAAsB;MAAAlB,EAAA,CAAAsB,MAAA,gBAAS;MAAAtB,EAAA,CAAAuB,YAAA,EAAQ;MACvCvB,EAAA,CAAAwB,SAAA,eAAsE;MAEtExB,EAAA,CAAAkB,cAAA,gBAAsB;MAAAlB,EAAA,CAAAsB,MAAA,cAAO;MAAAtB,EAAA,CAAAuB,YAAA,EAAS;;;;;;SDpC3B1C,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}