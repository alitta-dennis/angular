{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\login-page\\login-page.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport{Auth}\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit{\r\n  public loginForm!: FormGroup\r\n\r\n  constructor(private formbuilder: FormBuilder,private http: HttpClient, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formbuilder.group({\r\n      email: [''],\r\n      password: ['', Validators.required]\r\n    })\r\n  }\r\n  \r\n /*  login(){\r\n    this.http.get<any>(\"http://localhost:3000/signupUsersList\")\r\n    .subscribe(res=>{\r\n      const user = res.find((a:any)=>{\r\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password \r\n      });\r\n      if(user){\r\n        alert('Login Succesful');\r\n        this.loginForm.reset()\r\n      this.router.navigate([\"home\"])\r\n      }else{\r\n        alert(\"user not found\")\r\n      }\r\n    },err=>{\r\n      alert(\"Something went wrong\")\r\n    })\r\n  }\r\n */\r\n  login() {\r\n    console.log(this.loginForm.value)\r\n    this.http.get<any>(\"http://localhost:3000/signupUsersList\")\r\n      .subscribe({\r\n        next: (res) => {\r\n          const user = res.find((a: any) => {\r\n            return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\r\n          });\r\n          if (user) {\r\n            const fname = user.fname;\r\n            alert(`Welcome, ${fname}`);\r\n            this.loginForm.reset();\r\n            this.router.navigate([\"products\"]);\r\n          } else {\r\n            alert(\"User not found\");\r\n          }\r\n        },\r\n        error: (err) => {\r\n          alert(\"Something went wrong\");\r\n        }\r\n      });\r\n  }\r\n  \r\n}\r\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}