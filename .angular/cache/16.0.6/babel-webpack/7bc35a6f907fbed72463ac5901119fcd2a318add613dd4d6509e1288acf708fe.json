{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/hp/OneDrive/Desktop/P10 - Training/angular/Angular-ReactiveForms/apm-v12/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nclass LoginPageComponent {\n  constructor(formbuilder, http, router) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.result = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.http.get('http://localhost:3000/signupUsersList').subscribe(result => {\n        console.log(result);\n        _this.result = result;\n      });\n      /* ngOnInit(): void {\n        this.loginForm = this.formbuilder.group({\n          email: [''],\n          password: ['', Validators.required]\n        })\n      }\n      login(){\n        this.http.get<any>(\"http://localhost:3000/signupUsersList\")\n        .subscribe(res=>{\n          const user = res.find((a:any)=>{\n            return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password\n          });\n          if(user){\n            alert('Login Succesful');\n            this.loginForm.reset()\n          this.router.navigate([\"home\"])\n          }else{\n            alert(\"user not found\")\n          }\n        },err=>{\n          alert(\"Something went wrong\")\n        })\n      } */\n      loginForm = new FormGroup({\n        email: new FormControl('', [Validators.required]),\n        password: new FormControl('', [Validators.required])\n      });\n      loginUser();\n      {\n        var flag = false;\n        for (var i = 0, len = _this.result.length; i < len; i++) {\n          if (_this.loginForm.value['email'] == _this.result[i].email && _this.loginForm.value['password'] == _this.result[i].password) {\n            console.log(i, 'Login success.');\n            flag = true;\n            _this.toastr.success('Login success.');\n            break;\n          }\n        }\n        if (flag == false) {\n          console.log('Login fail.');\n          _this.toastr.error('Login fail.');\n        } else _this.router.navigate(['/home']);\n      }\n    })();\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login-page\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"form-box\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter Password\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"routerLink\", \"/signUp\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"span\");\n      i0.ɵɵtext(13, \"Create New Account \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 5);\n      i0.ɵɵtext(15, \"SignUp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"button\", 6);\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginPageComponent };","map":{"version":3,"names":["FormGroup","Validators","FormControl","LoginPageComponent","constructor","formbuilder","http","router","result","ngOnInit","_this","_asyncToGenerator","get","subscribe","console","log","loginForm","email","required","password","loginUser","flag","i","len","length","value","toastr","success","error","navigate","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_1_listener","login","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular-ReactiveForms\\apm-v12\\src\\app\\login-page\\login-page.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular-ReactiveForms\\apm-v12\\src\\app\\login-page\\login-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n  public loginForm!: FormGroup\n\n  result: any= [];\n\n  constructor(private formbuilder: FormBuilder,private http: HttpClient, private router: Router) { }\n\n  async ngOnInit(): Promise<void> {\n    this.http.get('http://localhost:3000/signupUsersList').subscribe(result => {\n      console.log(result)\n      this.result = result\n    })\n\n  /* ngOnInit(): void {\n    this.loginForm = this.formbuilder.group({\n      email: [''],\n      password: ['', Validators.required]\n    })\n  }\n  login(){\n    this.http.get<any>(\"http://localhost:3000/signupUsersList\")\n    .subscribe(res=>{\n      const user = res.find((a:any)=>{\n        return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password \n      });\n      if(user){\n        alert('Login Succesful');\n        this.loginForm.reset()\n      this.router.navigate([\"home\"])\n      }else{\n        alert(\"user not found\")\n      }\n    },err=>{\n      alert(\"Something went wrong\")\n    })\n  } */\n\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required])\n  })\n\n  loginUser() {\n    var flag: Boolean = false\n\n    for (var i = 0, len = this.result.length; i < len; i++) {\n      if (this.loginForm.value['email'] == this.result[i].email && this.loginForm.value['password'] == this.result[i].password) {\n        console.log(i, 'Login success.')\n        flag = true\n        this.toastr.success('Login success.');\n        break\n      }\n    }\n\n    if (flag == false) {\n      console.log('Login fail.')\n      this.toastr.error('Login fail.');\n    }\n    else\n      this.router.navigate(['/home']);\n  }\n}\n\n}\n","\n<!-- <div>\n    <h1>Hi Welcome Back</h1>\n     <h3>Login Here</h3>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n        <div>\n          <label for=\"email\">Email</label>\n          <input  formControlName=\"email\" required type=\"text\">\n          <label for=\"password\">Password</label>\n          <input formControlName=\"email\" type=\"password\" required>\n        </div>\n        <button>Submit</button>\n        <span>Don't have an account? \n        <a routerLink=\"/signUp\">signUp</a></span>\n      </form>\n  </div>\n -->\n  <div class=\"container\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"form-box\">\n        <h3>Login</h3>\n        <div class=\"form-group\">\n            <label>Email</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Email\"/>\n        </div>\n\n        <div class=\"form-group\">\n            <label>Password</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Password\"/>\n        </div>\n\n        <span>Create New Account </span>\n        <a routerLink=\"/signUp\">SignUp</a>\n        <br/>\n        <button type=\"submit\" class=\"btn btn-success\">Login</button>\n    </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}